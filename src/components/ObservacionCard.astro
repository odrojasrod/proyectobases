---
import '../styles/global.css'

let img = []
let taxon = []
let direccion = []

const {
    id,
    nombre_comun,
    nombre_cientifico,
    id_imagen,
    id_taxon,
    idDireccion,
} = Astro.props

try {
    const res = await fetch('http://localhost:8080/api/taxones/' + id_taxon)
    if (!res.ok) throw new Error(`Response status: ${res.status}`)

    taxon = await res.json()
} catch (error) {
    if (error instanceof Error) {
        console.log(error.message)
    }
}

try {
    const res = await fetch(`http://localhost:8080/api/imagenes/${id_imagen}`)
    if (!res.ok) throw new Error(`Response status: ${res.status}`)

    img = await res.json()
} catch (error) {
    if (error instanceof Error) {
        console.log(error.message)
    }
}

try {
    const res = await fetch(
        'http://localhost:8080/api/direcciones/' + idDireccion,
    )
    if (!res.ok) throw new Error(`Response status: ${res.status}`)

    direccion = await res.json()
} catch (error) {
    if (error instanceof Error) {
        console.log(error.message)
    }
}
---

<div class="flex" id={id}>
    <div
        class="h-48 lg:h-auto lg:w-48 flex-none bg-cover rounded-t lg:rounded-t-none lg:rounded-l text-center overflow-hidden"
        style={`background-image: url('${img.url}')`}
        title={nombre_cientifico}
    >
    </div>
    <div
        class="border-r border-b border-l border-gray-400 lg:border-l-0 lg:border-t lg:border-gray-400 bg-white rounded-b lg:rounded-b-none lg:rounded-r p-4 flex flex-col justify-between leading-normal"
    >
        <div class="mb-4">
            <p class="text-sm text-gray-600 flex items-center">
                <svg
                    xmlns="http://www.w3.org/2000/svg"
                    fill="none"
                    viewBox="0 0 24 24"
                    stroke-width="1.5"
                    stroke="currentColor"
                    class="text-gray-500 w-5 h-5 mr-2"
                >
                    <path
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        d="M6.75 3v2.25M17.25 3v2.25M3 18.75V7.5a2.25 2.25 0 0 1 2.25-2.25h13.5A2.25 2.25 0 0 1 21 7.5v11.25m-18 0A2.25 2.25 0 0 0 5.25 21h13.5A2.25 2.25 0 0 0 21 18.75m-18 0v-7.5A2.25 2.25 0 0 1 5.25 9h13.5A2.25 2.25 0 0 1 21 11.25v7.5m-9-6h.008v.008H12v-.008ZM12 15h.008v.008H12V15Zm0 2.25h.008v.008H12v-.008ZM9.75 15h.008v.008H9.75V15Zm0 2.25h.008v.008H9.75v-.008ZM7.5 15h.008v.008H7.5V15Zm0 2.25h.008v.008H7.5v-.008Zm6.75-4.5h.008v.008h-.008v-.008Zm0 2.25h.008v.008h-.008V15Zm0 2.25h.008v.008h-.008v-.008Zm2.25-4.5h.008v.008H16.5v-.008Zm0 2.25h.008v.008H16.5V15Z"
                    ></path>
                </svg>

                {img.fecha}
            </p>
            <div class="text-gray-900 font-bold text-xl mb-2">
                {nombre_cientifico} - {taxon.nombre}
            </div>
            <p class="text-gray-700 text-base">Nombre comun: {nombre_comun}</p>
            <p class="text-gray-700 text-base">
                Direccion: {direccion.calle}
                {direccion.ciudad}
                {direccion.estado}
                {direccion.pais}
            </p>
        </div>
        <div class="flex items-center">
            <div class="text-sm">
                <p class="text-gray-900 leading-none">{img.correoUsuario}</p>
                <p class="text-gray-600">Descubridor</p>
            </div>
        </div>
        <button
            type="button"
            data-id={id}
            class="focus:outline-none text-white bg-red-700 hover:bg-red-800 focus:ring-4 focus:ring-red-300 font-medium rounded-lg text-sm px-5 py-2.5 me-2 mb-2 dark:bg-red-600 dark:hover:bg-red-700 dark:focus:ring-red-900 mt-8"
            >Eliminar</button
        >
    </div>
</div>

<script type="module">
    document.addEventListener('DOMContentLoaded', () => {
        const botones = document.querySelectorAll('button[data-id]')

        botones.forEach((boton) => {
            boton.addEventListener('click', async () => {
                const id = boton.getAttribute('data-id')

                try {
                    const res = await fetch(
                        `http://localhost:8080/api/observaciones/${id_observacion}`,
                        {
                            method: 'DELETE',
                        },
                    )

                    if (res.ok) {
                        const card = document.getElementById(id_observacion)
                        if (card) card.remove()
                    } else {
                        alert('Error al eliminar la observaci√≥n.')
                    }
                } catch (error) {
                    console.error('Error al eliminar:', error)
                }
            })
        })
    })
</script>
